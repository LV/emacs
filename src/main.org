#+TITLE: LV's Emacs Configuration
#+AUTHOR: Luis Victoria
#+PROPERTY: header-args :tangle yes

- The following =.org= file takes all the code blocks and tangles (i.e., compiles) them to =config.el=, from which =init.el= (the default entrypoint) reads off of.
  - This document will not have the best organization, and that's due to the constraint of needing to execute certain lines of code before others.

- Due to constraints with developing on remote machines, I am forced to use Neovim for development (I actually like it a lot, but no org-mode sadly)
  - Hence, I want to replicate as much of the behavior as possible between both configurations
  - [[https://github.com/LV/nvim-config][Link to my Neovim configuration]]
    - I may end up going for some weird dynamic where I use Neovim inside of Emacs that emulates a terminal (that uses ~tmux~). That sounds incredibly dumb (and it probably is), but I think that's what I may actually end up going for.

* Pre-requisites
You *must* do the following to get the configuration to fully work.

/NOTE/: If you're building this through my [[https://github.com/lv/nixos][NixOS Flake]], it'll take care of everything you need ðŸ™‚.

** External Dependencies
*** System-wide dependencies
**** MacOS
#+begin_src sh :tangle no
  brew install fd ffmpegthumbnailer g-ls git ripgrep sqlite && brew install --cask mactex-no-gui mediainfo
#+end_src

**** Debian
#+begin_src sh :tangle no
  sudo apt install dvipng git ripgrep sqlite3 libsqlite3-dev texlive-base texlive-fonts-recommended texlive-latex-extra texlive-latex-recommended
#+end_src

** Fonts
- [[https://fsd.it/shop/fonts/pragmatapro/][PragmataPro Mono Liga]] (Not free)
- Alternatively, any [[https://www.nerdfonts.com/][Nerd Font]] should work

Evaluate the following commands in Emacs:

#+begin_src emacs-lisp :tangle no
  (all-the-icons-install-fonts)
  (nerd-fonts-install-fonts)
#+end_src

** Troubleshooting
*** Windows
Don't use Windows (and if you do, use WSL).

*** Org-mode package not found
This might only happen on the first attempt. Close Emacs and launch it again.

*** ~package-refresh-contents~
If something breaks when installing new packages, chances are that you'll need to run:

#+begin_src emacs-lisp :tangle no
  M-x package-refresh-contents
#+end_src

**** Examples of errors that this will fix
- Package =compat= unavailable
- Package =foo= not found in MELPA

* Load External Config Files
This configuration is modularized for maintainability.

/NOTE/: ~elpaca~ package manager is already loaded in order to get the correct version of ~org-mode~ to load this configuration.

#+begin_src emacs-lisp
  (defun lv/org-babel-load-file (file-path)
    "Load an org-babel file from the root emacs config directory."
    (org-babel-load-file
     (expand-file-name
      (concat user-emacs-directory file-path))))
#+end_src

** Package Management
#+begin_src emacs-lisp
  (lv/org-babel-load-file "src/package.org")
#+end_src

** Launch Emacs with ~PATH~ Environment Variables
MacOS requires additional an additional package to launch Emacs with the correct environment variables

#+begin_src emacs-lisp
  (use-package exec-path-from-shell
    :if (memq window-system '(mac ns x))
    :config
    (exec-path-from-shell-initialize))
#+end_src

** Define Keybindings
#+begin_src emacs-lisp
  (lv/org-babel-load-file "src/keybinding.org")
#+end_src

** Org-mode
#+begin_src emacs-lisp
  (lv/org-babel-load-file "src/org-mode.org")
#+end_src

** Evil-mode
Use Vim keybindings.

#+begin_src emacs-lisp
  (lv/org-babel-load-file "src/evil-mode.org")
#+end_src

** Modify/Enhance Emacs Behaviors and Core Functionality
#+begin_src emacs-lisp
  (lv/org-babel-load-file "src/core.org")
#+end_src

** Modify/Enhance Editor
Modifies default settings and extends editor functionality.

#+begin_src emacs-lisp
  (lv/org-babel-load-file "src/editor.org")
#+end_src

** Modify/Enhance UI
#+begin_src emacs-lisp
  (lv/org-babel-load-file "src/ui.org")
#+end_src

** Git
#+begin_src emacs-lisp
  (lv/org-babel-load-file "src/git.org")
#+end_src

** Programming
LSP and language specific settings.

#+begin_src emacs-lisp
  (lv/org-babel-load-file "src/programming.org")
#+end_src


* TODO Future Features to add
- Maybe add workspaces (on top of tabs)
- Split config into multiple files
- Replicate /oil.nvim/
- Migrate away from /lsp-mode/ to something like /lsp-bridge/

* TODO Non-obvious things to fix
- Pressing the tab character in terminal emacs does not result in an indent behavior
  - This should happen if there's no autocomplete box to fill
  - This behavior does not happen in Makefile
  - This happens in Python, Org-mode

* Load Config Modules
This configuration is modularized for maintainability.

#+begin_src emacs-lisp
  (lv/org-babel-load-file "src/modules/markdown-mode.org")
#+end_src
